{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Veg Mod Exploration: JAGS\"\nauthor: \"Tim Szewczyk\"\ndate: \"6/13/2017\"\noutput: html_document\n---\n\n```{r setEnv, echo=FALSE, message=FALSE}\nlibrary(sevcheck); library(magrittr); library(tidyverse); theme_set(theme_bw())\nlibrary(forcats); library(rjags); library(ggmcmc); library(mvtnorm)\n\nw_to_eta <- function(w, a=0.95) {\n  eta <- w[-length(w)]\n  eta[eta < 0] <- 0\n  w.pred <- sum((eta<1)*eta + (eta>1))\n  if(w.pred > a) {\n    D.i <- (1 - (1-a)^(w.pred/a)) / w.pred\n    eta <- D.i*eta\n  }\n  return(c(eta, 1-sum(eta)))\n}\n\nZ_Y_trans <- function(Z.v, g=2) {\n  Z.v[Z.v<0] <- 0\n  Z.l <- length(Z.v) - 1\n  if(Z.v[Z.l]==0) { Z.v[Z.l] <- 0.01 }\n  c((Z.v[1:Z.l]^g)/(1 + sum(Z.v[1:Z.l]^g)),\n    1/(1 + sum(Z.v[1:Z.l]^g)))\n}\n```\n\n# Read in data\n```{r rdData}\n# data from test grid (1-acre composition)\nGRNT <- read.csv(\"data/t_y_mx.csv\") %>% as.matrix\nNLCD <- read.csv(\"data/t_x_mx.csv\") %>% as.matrix\nFIA <- runif(nrow(GRNT), 0, 1)\n\n# Rearrange LC's\n# t_mx order: [Dev, Evg, Hwd, Mxd, Other, WP]\nGRNT <- GRNT[,c(1,5,3,4,2,6)]\nNLCD <- NLCD[,c(1,5,3,4,2)]\n```\n\n# Model option 1\n```{r mod1}\n# simulate first\nsd <- 0.1\nb <- c(-10, 20)\np <- antilogit(b[1] + X.FIA*b[2])\nw <- matrix(nrow=nCell, ncol=7)\ny.sim <- w\nfor(cell in 1:nCell) {\n  w[cell,] <- c(X[cell,1], X[cell,2], X[cell,3], X[cell,4], X[cell,5],\n                p[cell]*X[cell,6], (1-p[cell])*X[cell,6])\n  y.sim[cell,] <- rnorm(w[cell,], sd) %>% w_to_eta(a=0.85)\n}\n\n# build model\nj_dat <- list(Y=y.sim, X=X, X.FIA=X.FIA, n=nCell)\npars <- c(\"w\", \"p\", \"b\", \"tau\")\ncat(\"model{\n  # Likelihood\n  for(cell in 1:n) {\n    for(lc in 1:7) {\n      Y[cell, lc] ~ dnorm(w[cell, lc], tau[lc])\n    }\n    w[cell,1:7] <- c(X[cell,1], X[cell,2], X[cell,3], X[cell,4], X[cell,5], \n                  p[cell]*X[cell,6], (1-p[cell])*X[cell,6])\n    logit(p[cell]) <- b[1] + X.FIA[cell]*b[2]\n  }\n  \n  # Priors\n  for(i in 1:2) {\n    b[i] ~ dnorm(0, 0.1)\n  }\n  for(i in 1:7) {\n    tau[i] <- 1/(sd[i]*sd[i])\n    sd[i] ~ dunif(0, 2)\n  }\n}\", fill=TRUE, file=\"mod_sandbox/veg_SB1.txt\")\n\nmod <- jags.model(\"mod_sandbox/veg_SB1.txt\", j_dat, n.chains=3, n.adapt=5000)\nout <- coda.samples(mod, pars, n.iter=5000, thin=20)\n\ngg.w <- ggs(out, \"w\")\nnGG <- attr(gg.w, \"nIterations\")*attr(gg.w, \"nChains\")\ngg.w$Cell <- rep(1:nCell, each=nGG*7)\ngg.w$LC <- rep(1:7, each=nGG) %>% rep(nCell)\ngg.w$w.true <- rep(c(t(w)), each=nGG)\nggplot(filter(gg.w, Iteration %in% seq(1,nGG,10)), aes(x=w.true, y=value)) +\n  geom_point(alpha=0.05) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\n\ngg.p <- ggs(out, \"p\")\nnGG <- attr(gg.p, \"nIterations\")*attr(gg.p, \"nChains\")\ngg.p$Cell <- rep(1:nCell, each=nGG)\ngg.p$p.true <- rep(p, each=nGG)\ngg.p$f.prop <- (w[,6] + w[,7]) %>% rep(each=nGG)\nggplot(filter(gg.p, Iteration %in% seq(1,nGG,10)), aes(x=p.true, y=value)) +\n  geom_point(aes(colour=f.prop), alpha=0.5) + geom_abline(slope=1, linetype=3)\n\ngg.b <- ggs(out, \"b\")\nggs_traceplot(gg.b)\n```\n\n# Model option 2\n```{r mod2.simple}\n# Parameters & covariates\nnCell <- 2000\nnLC <- 6\nerr <- 0.01\nsamp.cells <- sample(1:nrow(GRNT), nCell)\n\n# Storage objects\n# mu <- rbeta(nCell*6, 0.4, 0.5) %>% matrix(nrow=nCell)\n# mu <- rmvnorm(nCell, mean=rep(0.15, nLC), sigma=diag(0.05, nLC, nLC))\n# mu <- mu %>% apply(., 1, w_to_eta, a=0.85) %>% t\nmu <- GRNT[samp.cells,]\np.err <- rnorm(nCell, 0, 0.05)\np.wp <- (mu[,5] + p.err)\np.wp[p.wp < 0] <- 0\np.wp[p.wp > 1] <- 1\np <- p.wp/(p.wp+mu[,6]+0.0001)\nY1 <- matrix(nrow=nCell, ncol=nLC)\nY2 <- Y1[,-1]\n\nfor(i in 1:nCell) {\n  # Y1: GRANIT\n  Y1[i,] <- rmvnorm(1, mu[i,], diag(err, nLC, nLC)) \n  # Y2: NLCD\n  Y2[i,] <- rmvnorm(1, c(mu[i,1:4], mu[i,5]+mu[i,6]), diag(err, nLC-1, nLC-1))\n}\nY1 <- Y1 %>% apply(.,1,w_to_eta) %>% t\nY2 <- Y2 %>% apply(.,1,w_to_eta) %>% t\n\n\n# simulated mu based on the means\nY1 <- GRNT[samp.cells,]\nY2 <- NLCD[samp.cells,]\np <- Y1[,5]/(Y1[,5] + Y1[,6] + 0.001) + rnorm(nCell, 0, 0.05)\np[p < 0] <- 0\np[p > 1] <- 1\n\nmu <- matrix(nrow=nCell, ncol=nLC)\nmu[,1:4] <- (Y1[,1:4] + Y2[,1:4])/2\nmu[,5:6] <- (Y1[,5:6] + cbind(Y2[,5]*p, Y2[,5]*(1-p)))/2\n\nplot(cbind(Y1[,1:4], rowSums(Y1[,5:6])), Y2)\nplot(mu, Y1)\nplot(cbind(mu[,1:4], rowSums(mu[,5:6])), Y2)\nplot((mu[,5]/(mu[,5]+mu[,6])), p)\n\nd_m2 <- list(Y1=Y1,\n             Y2=Y2,\n             p=p,\n             n=nCell,\n             nu.mu=rep(0.5, 6),\n             nu.cov=diag(1, 6, 6))\ncat(\"model{\n  # Likelihood\n  for(i in 1:n) {  # cells\n\n    for(l in 1:4) {\n      Y1[i,l] ~ dnorm(mu.a[i,l,1], tau[1])\n      Y2[i,l] ~ dnorm(mu.a[i,l,2], tau[1])\n    }\n    Y1[i,5] ~ dnorm(mu.a[i,5,1], tau[1])\n    Y1[i,6] ~ dnorm(mu.a[i,6,1], tau[1])\n    Y2[i,5] ~ dnorm(mu.a[i,5,2] + mu.a[i,6,2], tau[2])\n\n    for(l in 1:6) {\n      for(j in 1:2) {\n        mu.a[i,l,j] ~ dnorm(nu[i,l], tau[3])\n      }\n    }\n\n    p[i] ~ dnorm(nu[i,5]/(nu[i,5]+nu[i,6]), tau[4])\n  }\n\n\n  # Priors\n  for(i in 1:n) {\n    nu[i,1:6] ~ dmnorm(nu.mu, nu.cov)\n  }\n  for(i in 1:4) {\n    tau[i] <- 1/(sd[i]*sd[i])\n    sd[i] ~ dunif(0,1)\n  }\n}\", fill=TRUE, file=\"mod_sandbox/veg_SB2_simple.txt\")\n\npars <- c(\"nu\", \"sd\")\nmod <- jags.model(\"mod_sandbox/veg_SB2_simple.txt\", d_m2, n.chains=3, n.adapt=10000)\nout <- coda.samples(mod, variable.names=pars, n.iter=5000)\n\n\ngg.mu <- ggs(out, \"nu\")\nnGG <- attr(gg.mu, \"nIterations\")*attr(gg.mu, \"nChains\")\ngg.mu$Cell <- rep(1:nCell, each=nGG*6)\ngg.mu$LC <- rep(1:6, each=nGG) %>% rep(nCell)\ngg.mu$mu.true <- rep(c(t(mu)), each=nGG)\ngg.mu$Y1 <- rep(c(t(Y1)), each=nGG)\ngg.mu$Y2 <- rep(c(t(cbind(Y2, rep(NA, nrow(Y2))))), each=nGG)\ngg.mu <- gg.mu %>% filter(Iteration %in% seq(1,nGG,200)) %>%\n  group_by(Iteration, Chain, Cell) %>%\n  mutate(value.eta=w_to_eta(value), value.scaled=value/sum(value),\n         repInd=paste(Chain, Iteration, Cell, LC, sep=\".\"))\nggplot(gg.mu, aes(x=mu.true, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.mu, aes(x=Y1, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.mu, aes(x=Y2, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\n\ngg.mu.a <- ggs(out, \"mu.a\")\ngg.mu.a$Cell <- 1:nCell %>% rep(each=nGG*6*2)\ngg.mu.a$LC <- 1:6 %>% rep(each=nGG*2) %>% rep(nCell)\ngg.mu.a$Source <- c(\"GRNT\", \"NLCD\") %>% rep(each=nGG) %>% rep(nCell*6)\ngg.mu.a$mu.true <- t(mu) %>% c %>% rep(each=nGG*2)\ngg.mu.a$repInd <- with(gg.mu.a, paste(Chain, Iteration, Cell, LC, sep=\".\"))\ngg.mu.a$nu <- gg.mu$value[match(gg.mu.a$repInd, gg.mu$repInd)]\ngg.mu.a <- gg.mu.a %>% filter(Iteration %in% seq(1,nGG,200))\nggplot(gg.mu.a, aes(x=mu.true, y=value, colour=Source)) +\n  geom_point(alpha=0.1) + geom_abline(slope=1, linetype=3) + facet_grid(Source~LC)\nggplot(gg.mu.a, aes(x=nu, y=value)) + geom_point(alpha=0.01) + \n  geom_abline(slope=1, linetype=3) + facet_grid(Source~LC)\n\ngg.sd <- ggs(out, \"sd\")\nggs_caterpillar(gg.sd)\n\nmu2 <- cbind(mu[,1:4], rowSums(mu[,5:6]))\nY1.rmse <- ((mu - Y1)^2) %>% colMeans %>% sqrt\nY2.rmse <- ((mu2 - Y2)^2) %>% colMeans %>% sqrt\ngg.mu %>% group_by(LC) %>% mutate(sdev=(mu.true-value)^2) %>%\n  summarise(mod.rmse=mean(sdev) %>% sqrt %>% round(3)) %>%\n  mutate(Y1.rmse=round(Y1.rmse,3),\n         Y2.rmse=c(round(Y2.rmse,3), NA),\n         diff.Y1=round(mod.rmse-Y1.rmse, 3), \n         propDiff.Y1=round(diff.Y1/Y1.rmse,3))\n```\n\n```{r mod2.d.sim}\nnCell <- 20\nnLC <- 6\nnB.d <- 2\nnB.p <- 2\nX.d <- runif(nCell*nB.d, -1, 1) %>% matrix(nrow=nCell)\nX.p <- runif(nCell*nB.p, -1, 1) %>% matrix(nrow=nCell)\nB.d <- runif(nLC*nB.d, -0.5, 0.5) %>% matrix(nrow=nB.d)\nB.p <- runif(nLC*nB.p, -1, 1) %>% matrix(nrow=nB.p)\n\nnu <- GRNT[sample(1:nrow(GRNT), nCell),]\n\nd <- X.d %*% B.d\n\nY1 <- nu; Y2 <- nu[,-1]; Z2 <- Y1\nfor(i in 1:nCell) {\n  Y1[i,] <- rmvnorm(1, nu[i,], diag(0.01, nLC, nLC))\n  Z2[i,] <- rmvnorm(1, nu[i,] + d[i,], diag(0.01, nLC, nLC))\n}\nY2[,1:4] <- Z2[,1:4]\nY2[,5] <- Z2[,5] + Z2[,6]\n\n\n# Y1 <- apply(Y1, 1, w_to_eta) %>% t\n# Y2 <- apply(Y2, 1, w_to_eta) %>% t\nplot(cbind(Y1[,1:4], rowSums(Y1[,5:6])), Y2)\np <- rnorm(nCell, mean(nu[,6]/(nu[,5]+nu[,6]+0.0001)), 0.05)\nmnY <- Y1\nmnY[,1:4] <- (Y1[,1:4] + Y2[,1:4])/2\nmnY[,5:6] <- (Y1[,5:6] + cbind(Y2[,5]*(1-p), Y2[,5]*p))/2\n\nd_sim <- list(Y1=Y1, Y2=Y2, X.d=X.d,\n              p=p, n=nCell,\n              cov.mx=diag(1, nLC, nLC),\n              nu.mu=rep(0.5, 6))\ncat(\"\ndata {\n\tfor(i in 1:n) {\n\t\tZ2[i,1:4] <- Y2[i,1:4]\n\t\tZ2[i,5] <- Y2[i,5]*(1-p[i])\n    Z2[i,6] <- Y2[i,5]*p[i]\n\t\tmu.a[i,1:6,1] <- Y1[i,1:6]\n\t\tmu.a[i,1:6,2] <- Z2[i,1:6]\n\t}\n}\n\nmodel {\n  # Likelihood\n\tfor(i in 1:n) {\n\t\tfor(j in 1:2) {\n      mu.a[i,1:6,j] ~ dmnorm(nu[i,1:6], mu.a.cov)\n\t\t}\n\t\tp[i] ~ dnorm(nu[i,6]/(nu[i,5]+nu[i,6]), tau)\n\t}\n\n  # Priors\n  for(i in 1:n) {\n    nu[i,1:6] ~ ddirch(nu.mu)\n  }\n  mu.a.cov[1:6, 1:6] ~ dwish(cov.mx, 6)\n  tau <- 1/(sd*sd)\n  sd ~ dunif(0,1)\n}\", fill=TRUE, file=\"mod_sandbox/veg_SB2_d2.txt\")\n\ncat(\"\ndata {\n\tfor(i in 1:n) {\n\t\tZ2[i,1:4] <- Y2[i,1:4]\n\t\tZ2[i,5] <- Y2[i,5]*(1-p[i])\n    Z2[i,6] <- Y2[i,5]*p[i]\n\t\tmu.a[i,1:6,1] <- Y1[i,1:6]\n\t\tmu.a[i,1:6,2] <- Z2[i,1:6]\n\t}\n}\n\nmodel{\n  # Likelihood\n\tfor(i in 1:n) {\n    mu.a[i,1:6,1] ~ dmnorm(nu[i,1:6], mu.a.cov)\n    mu.a[i,1:6,2] ~ dmnorm(nu[i,1:6] + d[1:6], mu.a.cov)\n\t\tp[i] ~ dnorm(nu[i,6]/(nu[i,5]+nu[i,6]), tau)\n\t}\n\n  # Priors\n  for(i in 1:n) {\n    nu[i,1:6] ~ ddirch(nu.mu)\n  }\n  for(l in 1:6) {\n    d[l] ~ dnorm(0, 0.01)\n  }\n  mu.a.cov[1:6, 1:6] ~ dwish(cov.mx, 6)\n  tau <- 1/(sd*sd)\n  sd ~ dunif(0,1)\n}\", fill=TRUE, file=\"mod_sandbox/veg_SB2_d3.txt\")\n\ncat(\"\ndata {\n\tfor(i in 1:n) {\n\t\tZ2[i,1:4] <- Y2[i,1:4]\n\t\tZ2[i,5] <- Y2[i,5]*(1-p[i])\n    Z2[i,6] <- Y2[i,5]*(p[i])\n\t\tmu.a[i,1:6,1] <- Y1[i,1:6]\n\t\tmu.a[i,1:6,2] <- Z2[i,1:6]\n\t}\n  nB.d <- dim(X.d)\n}\n\nmodel{\n  # Likelihood\n\tfor(i in 1:n) {\n    mu.a[i,1:6,1] ~ dmnorm(nu[i,1:6], mu.a.cov)\n    mu.a[i,1:6,2] ~ dmnorm(nu[i,1:6] + d[i,1:6], mu.a.cov)\n    \n    d[i,1:6] <- X.d[i,] %*% B.d\n    \n\t\tp[i] ~ dnorm(nu[i,6]/(nu[i,5]+nu[i,6]), tau)\n\t}\n\n  # Priors\n  for(i in 1:n) {\n    nu[i,1:6] ~ ddirch(nu.mu)\n  }\n  for(b in 1:nB.d[2]) {\n    for(l in 1:6) {\n      B.d[b,l] ~ dnorm(0, 0.01)\n    }\n  }\n  mu.a.cov[1:6, 1:6] ~ dwish(cov.mx, 6)\n  tau <- 1/(sd*sd)\n  sd ~ dunif(0,1)\n}\", fill=TRUE, file=\"mod_sandbox/veg_SB2_d4.txt\")\n\npars <- c(\"nu\", \"B.d\", \"sd\")\nmod <- jags.model(\"mod_sandbox/veg_SB2_d4.txt\", d_sim, n.chains=3, n.adapt=5000)\nout <- coda.samples(mod, variable.names=pars, n.iter=5000, n.thin=30)\n\ngg.nu <- ggs(out, \"nu\")\nnGG <- attr(gg.nu, \"nIterations\")*attr(gg.nu, \"nChains\")\ngg.nu$Cell <- rep(1:nCell, each=nGG*6)\ngg.nu$LC <- rep(1:6, each=nGG) %>% rep(nCell)\ngg.nu$nu.true <- rep(c(t(nu)), each=nGG)\ngg.nu$Y1 <- rep(c(t(Y1)), each=nGG)\ngg.nu$Y2 <- rep(c(t(cbind(Y2, rep(NA, nrow(Y2))))), each=nGG)\ngg.nu$mnY <- rep(c(t(mnY)), each=nGG)\ngg.nu <- gg.nu %>% filter(Iteration %in% seq(1,nGG,200)) %>%\n  group_by(Iteration, Chain, Cell) %>%\n  mutate(value.eta=w_to_eta(value), value.scaled=value/sum(value),\n         value.ZY=Z_Y_trans(value),\n         repInd=paste(Chain, Iteration, Cell, LC, sep=\".\"))\nggplot(gg.nu, aes(x=nu.true, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.nu, aes(x=nu.true, y=value.eta)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.nu, aes(x=nu.true, y=value.ZY)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.nu, aes(x=nu.true, y=value.scaled)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.nu, aes(x=mnY, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.nu, aes(x=Y1, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.nu, aes(x=Y2, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\n\ngg.Bd <- ggs(out, \"B.d\")\ngg.Bd$LC <- rep(1:6, each=nGG) %>% rep(2)\ngg.Bd$Bd.true <- rep(c(t(B.d)), each=nGG)\nggplot(gg.Bd, aes(x=Bd.true, y=value)) + geom_abline(slope=1, linetype=3) +\n  geom_point(alpha=0.01)\n\nnu2 <- cbind(nu[,1:4], rowSums(nu[,5:6]))\nY1.rmse <- ((nu - Y1)^2) %>% colMeans %>% sqrt\nY2.rmse <- ((nu2 - Y2)^2) %>% colMeans %>% sqrt\ngg.nu %>% group_by(LC) %>% mutate(sdev=(nu.true-value)^2) %>%\n  summarise(mod.rmse=mean(sdev) %>% sqrt %>% round(3)) %>%\n  mutate(Y1.rmse=round(Y1.rmse,3),\n         Y2.rmse=c(round(Y2.rmse,3), NA),\n         diff.Y1=round(mod.rmse-Y1.rmse, 3), \n         propDiff.Y1=round(diff.Y1/Y1.rmse,3))\n\n```\n\n\n```{r mod2.d}\n# Parameters & covariates\nnCell <- 100\nnLC <- 6\nsamp.cells <- sample(1:nrow(GRNT), nCell)\n\n# simulated mu based on the means\nY1 <- GRNT[samp.cells,]\nY2 <- NLCD[samp.cells,]\np <- Y1[,5]/(Y1[,5] + Y1[,6] + 0.001) + rnorm(nCell, 0, 0.05)\np[p < 0] <- 0\np[p > 1] <- 1\n\nmu <- matrix(nrow=nCell, ncol=nLC)\nmu[,1:4] <- (Y1[,1:4] + Y2[,1:4])/2\nmu[,5:6] <- (Y1[,5:6] + cbind(Y2[,5]*p, Y2[,5]*(1-p)))/2\n\nplot(cbind(Y1[,1:4], rowSums(Y1[,5:6])), Y2)\npar(mfrow=c(2,3))\napply(cbind(Y1[,1:4], rowSums(Y1[,5:6])) - Y2, 2, hist, xlim=c(-1,1), breaks=20)\npar(mfrow=c(1,1))\nplot(mu, Y1)\nplot(cbind(mu[,1:4], rowSums(mu[,5:6])), Y2)\nplot((mu[,5]/(mu[,5]+mu[,6])), p)\n\nd_m2 <- list(Y1=Y1,\n             Y2=Y2,\n             p=p,\n             n=nCell,\n             cov.mx=diag(1, nLC, nLC),\n             nu.mu=rep(0.5, 6))\ncat(\"model{\n  # Likelihood\n  for(i in 1:n) {  # cells\n\n    for(l in 1:4) {\n      Y1[i,l] ~ dnorm(mu.a[i,l,1] + d[l,1], tau[1])\n      Y2[i,l] ~ dnorm(mu.a[i,l,2] + d[l,2], tau[1])\n    }\n    Y1[i,5] ~ dnorm(mu.a[i,5,1] + d[5,1], tau[1])\n    Y1[i,6] ~ dnorm(mu.a[i,6,1] + d[6,1], tau[1])\n    Y2[i,5] ~ dnorm(mu.a[i,5,2] + mu.a[i,6,2] + d[5,2], tau[2])\n\n    for(j in 1:2) {\n      mu.a[i,1:6,j] ~ dmnorm(nu[i,1:6], mu.a.cov[1:6, 1:6])\n    }\n\n    p[i] ~ dnorm(nu[i,5]/(nu[i,5]+nu[i,6]), tau[3])\n  }\n\n\n  # Priors\n  for(i in 1:n) {\n    nu[i,1:6] ~ ddirch(nu.mu)\n  }\n  for(l in 1:5) {\n    for(j in 1:2) {\n      d[l,j] ~ dnorm(0, 0.01)\n    }\n  }\n  d[6,1] ~ dnorm(0, 0.01)\n  mu.a.cov[1:6, 1:6] ~ dwish(cov.mx, 6)\n  for(i in 1:3) {\n    tau[i] <- 1/(sd[i]*sd[i])\n    sd[i] ~ dunif(0,1)\n  }\n}\", fill=TRUE, file=\"mod_sandbox/veg_SB2_d.txt\")\n\npars <- c(\"nu\", \"d\")\nmod <- jags.model(\"mod_sandbox/veg_SB2_d.txt\", d_m2, n.chains=3, n.adapt=2000)\nout <- coda.samples(mod, variable.names=pars, n.iter=5000)\n\n\ngg.mu <- ggs(out, \"nu\")\nnGG <- attr(gg.mu, \"nIterations\")*attr(gg.mu, \"nChains\")\ngg.mu$Cell <- rep(1:nCell, each=nGG*6)\ngg.mu$LC <- rep(1:6, each=nGG) %>% rep(nCell)\ngg.mu$mu.true <- rep(c(t(mu)), each=nGG)\ngg.mu$Y1 <- rep(c(t(Y1)), each=nGG)\ngg.mu$Y2 <- rep(c(t(cbind(Y2, rep(NA, nrow(Y2))))), each=nGG)\ngg.mu <- gg.mu %>% filter(Iteration %in% seq(1,nGG,200)) %>%\n  group_by(Iteration, Chain, Cell) %>%\n  mutate(value.eta=w_to_eta(value), value.scaled=value/sum(value),\n         value.ZY=Z_Y_trans(value),\n         repInd=paste(Chain, Iteration, Cell, LC, sep=\".\"))\nggplot(gg.mu, aes(x=mu.true, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.mu, aes(x=Y1, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\nggplot(gg.mu, aes(x=Y2, y=value)) +\n  geom_point(alpha=0.02) + geom_abline(slope=1, linetype=3) + facet_wrap(~LC)\n\n\ngg.d <- ggs(out, \"d\")\nggs_caterpillar(gg.d)\nggs_traceplot(gg.d) + facet_wrap(~Parameter)\n\ngg.cov <- ggs(out, \"mu.a.cov\")\nggs_caterpillar(gg.cov)\nggs_traceplot(gg.cov) + facet_wrap(~Parameter)\n```\n\n\n\n```{r mod2.b.nu}\n# Here, we assume that the covariates drive the latent land cover proportions. The variation of GRANIT and NLCD about the latent land cover is still considered random and unaccounted for.\n```\n\n```{r mod2.b.mu.a}\n# Here, we assume that the covariates drive the deviation of NLCD and GRANIT from the latent land cover proportions. This structure requires that there is some systematic d in the estimate of each dataset compared to the latent proportions.\n```\n\n\n\n\n\n",
    "created" : 1498610971942.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "214666623",
    "id" : "99845AEB",
    "lastKnownWriteTime" : 1498077708,
    "last_content_update" : 1498077708,
    "path" : "~/Documents/UNH/mod_veg/mod_exploratory_jags.Rmd",
    "project_path" : "mod_exploratory_jags.Rmd",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}