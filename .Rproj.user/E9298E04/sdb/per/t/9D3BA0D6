{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Veg Mod Exploration: stan\"\nauthor: \"Tim Szewczyk\"\ndate: \"6/13/2017\"\noutput: html_document\n---\n\n```{r setEnv, echo=FALSE, message=FALSE}\nlibrary(sevcheck); library(magrittr); library(tidyverse); theme_set(theme_bw())\nlibrary(forcats); library(rstan); library(ggmcmc); library(mvtnorm)\nrstan_options(auto_write = TRUE)\noptions(mc.cores = parallel::detectCores())\n\nw_to_eta <- function(w, a=0.95) {\n  eta <- w[-length(w)]\n  eta[eta < 0] <- 0\n  w.pred <- sum((eta<1)*eta + (eta>1))\n  if(w.pred > a) {\n    D.i <- (1 - (1-a)^(w.pred/a)) / w.pred\n    eta <- D.i*eta\n  }\n  return(c(eta, 1-sum(eta)))\n}\n\nZ_Y_trans <- function(Z.v, g=2) {\n  Z.v[Z.v<0] <- 0\n  Z.l <- length(Z.v) - 1\n  if(Z.v[Z.l]==0) { Z.v[Z.l] <- 0.01 }\n  c((Z.v[1:Z.l]^g)/(1 + sum(Z.v[1:Z.l]^g)),\n    1/(1 + sum(Z.v[1:Z.l]^g)))\n}\n```\n\n# Read in data\n```{r rdData}\n# data from test grid (1-acre composition)\nGRNT <- read.csv(\"data/t_y_mx.csv\") %>% as.matrix\nNLCD <- read.csv(\"data/t_x_mx.csv\") %>% as.matrix\nFIA <- runif(nrow(GRNT), 0, 1)\n\n# Rearrange LC's\n# t_mx order: [Dev, Evg, Hwd, Mxd, Other, WP]\nGRNT <- GRNT[,c(1,5,3,4,2,6)]\nNLCD <- NLCD[,c(1,5,3,4,2)]\n```\n\n\n```{r stan.test}\nschools_dat <- list(J = 8, \n                    y = c(28,  8, -3,  7, -1,  1, 18, 12),\n                    sigma = c(15, 10, 16, 11,  9, 11, 10, 18))\n\nfit <- stan(file = 'mod_sandbox/8schools.stan', data = schools_dat, \n            iter = 1000, chains = 4)\nprint(fit)\nplot(fit)\npairs(fit, pars = c(\"mu\", \"tau\", \"lp__\"))\n\nla <- extract(fit, permuted = TRUE) # return a list of arrays \nmu <- la$mu \n\n### return an array of three dimensions: iterations, chains, parameters \na <- extract(fit, permuted = FALSE) \n\n### use S3 functions as.array (or as.matrix) on stanfit objects\na2 <- as.array(fit)\nm <- as.matrix(fit)\nprint(fit, digits = 1)\n```\n```{r stan.test2}\ny <- as.matrix(read.table('https://raw.github.com/wiki/stan-dev/rstan/rats.txt', header = TRUE))\nx <- c(8, 15, 22, 29, 36)\nxbar <- mean(x)\nN <- nrow(y)\nT <- ncol(y)\nrats_fit <- stan(file = 'https://raw.githubusercontent.com/stan-dev/example-models/master/bugs_examples/vol1/rats/rats.stan')\n```\n```{r stan.test3}\nlibrary(RColorBrewer)\n#simulate some data\nset.seed(20161110)\nN<-100 #sample size\nJ<-10 #number of plant species\nid<-rep(1:J,each=10) #index of plant species\nK<-3 #number of regression coefficients\n#population-level regression coefficient\ngamma<-c(2,-1,3)\n#standard deviation of the group-level coefficient\ntau<-c(0.3,2,1)\n#standard deviation of individual observations\nsigma<-1\n#group-level regression coefficients\nbeta<-mapply(function(g,t) rnorm(J,g,t),g=gamma,t=tau) \n#the model matrix\nX<-model.matrix(~x+y,data=data.frame(x=runif(N,-2,2),y=runif(N,-2,2)))\ny<-vector(length = N)\nfor(n in 1:N){\n  #simulate response data\n  y[n]<-rnorm(1,X[n,]%*%beta[id[n],],sigma)\n}\n#run the model\nm_hier<-stan(file=\"mod_sandbox/rblog.stan\",data=list(N=N,J=J,K=K,id=id,X=X,y=y))\nm_hier\n```\n```{r stan.test4}\nK <- 6\nJ <- 3\nN <- 10\nx <- matrix(runif(N*J), nrow=N, ncol=J)\nbeta.t <- matrix(runif(K*J), nrow=K, ncol=J)\nSigma.t <- diag(0.1, K, K)\nmu <- matrix(nrow=N, ncol=K)\ny <- matrix(nrow=N, ncol=K)\nfor(n in 1:N) {\n  mu[n,] <- beta.t %*% x[n,]\n  y[n,] <- rmvnorm(1, mu[n,], Sigma.t)\n}\n\nd_t4 <- list(K=K, J=J, N=N, x=x, y=y)\nout <- stan(file=\"mod_sandbox/mv_examp.stan\", data=d_t4, cores=4)\n\ngg.mu <- ggs(out, \"mu\") %>% arrange(Parameter, Chain, Iteration)\nnGG <- attr(gg.mu, \"nChains\")*attr(gg.mu, \"nIterations\")\ngg.mu$mu.true <- t(mu) %>% c %>% rep(each=nGG)\nggplot(gg.mu, aes(x=mu.true, y=value)) + geom_abline(slope=1, linetype=2) +\n  geom_point(alpha=0.01) \n```\n\n\n# Simplest version\n```{r mod.simp}\n# simulate data\n## set parameters\nnCell <- 20\nnLC <- 6\ns2.grnt <- 0.001\ns2.nlcd <- s2.grnt\ncov.grnt <- cov(GRNT)\n# cov.grnt <- diag(s2.grnt, nLC, nLC)\ncell.samp <- sample(1:nrow(GRNT), nCell)\n\n## generate data\nnu <- GRNT[cell.samp,]\nY.grnt <- nu; Y.nlcd.dp <- nu\nfor(i in 1:nCell) {\n  Y.grnt[i,] <- rmvnorm(1, nu[i,], cov.grnt) \n  Y.nlcd.dp[i,] <- rmvnorm(1, nu[i,], cov.grnt) \n}\nplot(Y.grnt, Y.nlcd.dp); plot(nu, Y.grnt); plot(nu, Y.nlcd.dp)\nd_SB1.2 <- list(N=nrow(nu), L=ncol(nu), Y1=Y.grnt, Y2=Y.nlcd.dp)\nout <- stan(file=\"mod_sandbox/veg_SB1_2.stan\", data=d_SB1.2, thin=50)\n\ngg.nu <- ggs(out, \"nu\") %>% arrange(Parameter, Chain, Iteration)\nnGG <- attr(gg.nu, \"nChains\")*attr(gg.nu, \"nIterations\")\ngg.nu$nu.true <- t(nu) %>% c %>% rep(each=nGG)\ngg.nu$LC <- 1:6 %>% rep(each=nGG) %>% rep(times=nCell)\nggplot(gg.nu, aes(x=nu.true, y=value)) + geom_abline(slope=1, linetype=2) +\n  geom_point(alpha=0.02) + facet_wrap(~LC, scales=\"free\")\n```\n\n\n```{r}\n# simulate data\n## set parameters\nnCell <- 50\nnLC <- 6\ns2.grnt <- 0.001\ns2.nlcd <- s2.grnt\n# cov.grnt <- cov(GRNT)\ncov.grnt <- diag(s2.grnt, nLC, nLC)\ncov.nlcd <- cov.grnt\nnB.d <- 2\nnB.p <- 2\nX.d <- runif(nCell*nB.d, -1, 1) %>% matrix(nrow=nCell)\nX.p <- runif(nCell*nB.p, -1, 1) %>% matrix(nrow=nCell)\nB.d <- runif((nLC-1)*nB.d, -0.5, 0.5) %>% matrix(nrow=nB.d)\n# B.d <- matrix(0, nrow=nB.d, ncol=nLC-1)\nB.p <- runif(nLC*nB.p, -1, 1) %>% matrix(nrow=nB.p)\n\nnu <- GRNT[sample(1:nrow(GRNT), nCell),]\nY1 <- nu; Y2.ds <- Y1\np <- nu[,6]/(nu[,5]+nu[,6]+0.0001) + rnorm(nCell, 0, 0.005)\np[p>1] <- 1; p[p<0] <- 0\n\n# GRNT, eta\nfor(i in 1:nCell) {\n  Y1[i,] <- rmvnorm(1, nu[i,], cov.grnt)\n  Y2.ds[i,] <- rmvnorm(1, nu[i,], cov.nlcd)\n}\n\n# combine WP + Evg\nY2.d <- cbind(Y2.ds[,1:4], Y2.ds[,5] + Y2.ds[,6])\n\n# add bias\nd <- X.d %*% B.d\nY2 <- Y2.d - d\n\n\n\n## run model\nd_SB1.5 <- list(N=nrow(nu), L=ncol(nu), Y1=Y1, Y2=Y2, p=p, nB_d=2, X_d=X.d)\nout <- stan(file=\"mod_sandbox/veg_SB1_5.stan\", data=d_SB1.5, thin=50, init=0)\n\n\n\n## visualize\ngg.nu <- ggs(out, \"nu\") %>% arrange(Parameter, Chain, Iteration)\nnGG <- attr(gg.nu, \"nChains\")*attr(gg.nu, \"nIterations\")\ngg.nu$nu.true <- t(nu) %>% c %>% rep(each=nGG)\ngg.nu$LC <- 1:6 %>% rep(each=nGG) %>% rep(times=nCell)\nggplot(gg.nu, aes(x=nu.true, y=value)) + geom_abline(slope=1, linetype=2) +\n  geom_point(alpha=0.1) + facet_wrap(~LC)\n\ngg.Bd <- ggs(out, \"beta_d\") %>% arrange(Parameter, Chain, Iteration)\ngg.Bd$LC <- rep(1:5, each=nGG) %>% rep(nB.d)\ngg.Bd$Bd.true <- t(B.d) %>% c %>% rep(each=nGG)\nggplot(gg.Bd, aes(x=Bd.true, y=value)) + geom_abline(slope=1, linetype=3) +\n  geom_point(alpha=0.1)\n\n\n## RMSE\nnu2 <- cbind(nu[,1:4], rowSums(nu[,5:6]))\nY1.rmse <- ((nu - Y1)^2) %>% colMeans %>% sqrt\nY2.rmse <- ((nu2 - Y2)^2) %>% colMeans %>% sqrt\ngg.nu %>% group_by(LC) %>% mutate(sdev=(nu.true-value)^2) %>%\n  summarise(mod.rmse=mean(sdev) %>% sqrt %>% round(3)) %>%\n  mutate(Y1.rmse=round(Y1.rmse,3),\n         Y2.rmse=c(round(Y2.rmse,3), NA),\n         diff.Y1=round(mod.rmse-Y1.rmse, 3), \n         propDiff.Y1=round(diff.Y1/Y1.rmse,3))\n```\n\n\n\n\n\n\n\n\n",
    "created" : 1498077664548.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "47|16|68|0|\n69|17|76|0|\n77|17|103|0|\n104|17|126|0|\n",
    "hash" : "3901472468",
    "id" : "9D3BA0D6",
    "lastKnownWriteTime" : 1498611926,
    "last_content_update" : 1498611932772,
    "path" : "~/Documents/UNH/mod_veg/mod_exploratory_stan.Rmd",
    "project_path" : "mod_exploratory_stan.Rmd",
    "properties" : {
        "chunk_output_type" : "inline",
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}